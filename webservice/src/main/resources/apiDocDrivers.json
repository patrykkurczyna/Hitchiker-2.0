{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://87.206.242.147:1111/webservice",
  "resourcePath": "/drivers",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/drivers",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new driver",
          "notes": "",
          "type": "void",
          "nickname": "addDriver",
          "authorizations": {},
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "description": "Driver object that is to be added",
              "required": true,
              "type": "Driver",
              "paramType": "body",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "message": "Driver created"
            },
            {
              "code": 404,
              "message": "Not found - when user, for which driver is being added, is not found"
            },
            {
              "code": 500,
              "message": "When there is already active driver for given user"
            }
          ]
        }
      ]
    },
    {
      "path": "/drivers",
      "operations": [
        {
          "method": "GET",
          "summary": "Gets all drivers",
          "notes": "",
          "type": "array",
          "items": {
            "$ref": "Driver"
          },
          "nickname": "getDrivers",
          "authorizations": {},
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid status value"
            },
            {
              "code": 200,
              "message": "OK"
            }
          ]
        }
      ]
    },
    {
      "path": "/drivers/findActiveDevicesInRadiusFrom",
      "operations": [
        {
          "method": "GET",
          "summary": "Finds active drivers devices in specific radius",
          "notes": "The method is used to find all active drivers devices in specified radius from some point",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nickname": "findActiveDevicesInRadiusFrom",
          "authorizations": {},
          "parameters": [
            {
              "name": "radius",
              "description": "Radius to search",
              "required": true,
              "type": "integer",
              "format": "integer64",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "latitude",
              "description": "Geolocation latitude from which we search",
              "required": true,
              "type": "double",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "longitude",
              "description": "Geolocation longitude from which we search",
              "required": true,
              "type": "double",
              "paramType": "query",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid params value"
            }
          ]
        }
      ]
    },
        {
      "path": "/drivers/countActive",
      "operations": [
        {
          "method": "GET",
          "summary": "Gets number of active drivers for specified user",
          "notes": "",
          "type": "integer",
          "format": "integer64",
          "nickname": "countActiveDrivers",
          "authorizations": {},
          "parameters": [
            {
              "name": "userId",
              "description": "user id for which we count",
              "required": true,
              "type": "integer",
              "format": "integer64",
              "paramType": "query",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid params value"
            }
          ]
        }
      ]
    },
    {
      "path": "/drivers/{driverId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find driver by ID",
          "notes": "Returns a driver based on ID",
          "type": "Driver",
          "nickname": "getDriverById",
          "authorizations": {},
          "parameters": [
            {
              "name": "driverId",
              "description": "ID of driver that needs to be fetched",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Driver not found"
            },
            {
              "code": 200,
              "message": "OK"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Deletes a driver",
          "notes": "",
          "type": "void",
          "nickname": "deleteDriver",
          "authorizations": {},
          "parameters": [
            {
              "name": "driverId",
              "description": "Driver id to delete",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid driver value"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "partial updates to a driver",
          "notes": "",
          "type": "array",
          "items": {
            "$ref": "Driver"
          },
          "nickname": "partialUpdateDriver",
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "driverId",
              "description": "ID of driver that needs to be fetched",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "body",
              "description": "Driver object that needs to be added",
              "required": true,
              "type": "Driver",
              "paramType": "body",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "message": "Driver created"
            },
            {
              "code": 404,
              "message": "Not found - when user, fir which driver is being added, is not found"
            },
            {
              "code": 500,
              "message": "When there is already active driver for given user"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "User": {
      "id": "User",
      "required": [
        "login",
        "password",
        "firstname",
        "lastname"
      ],
      "properties": {
        "login": {
          "type": "string",
          "description": "unique user login"
        },
        "password": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "birthdate": {
          "type": "date"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Hitchhiker": {
      "id": "Hitchhiker",
      "required": [
        "finalDestination",
        "deviceId",
        "user",
        "active"
      ],
      "properties": {
        "user": {
          "$ref": "User"
        },
        "finalDestination": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "geoLatitude": {
          "type": "string"
        },
        "geoLongitude": {
          "type": "string"
        },
        "children": {
          "type": "boolean"
        },
        "destinations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfPassengers": {
          "type": "integer",
          "format": "int64"
        },
        "ageType": {
          "type": "string",
          "description": "age type for hitchhiker",
          "enum": [
            "young",
            "middle",
            "senior"
          ]
        },
        "sexType": {
          "type": "string",
          "description": "sex type for hitchhiker",
          "enum": [
            "male_only",
            "female_only",
            "mixed"
          ]
        },
        "baggageType": {
          "type": "string",
          "description": "baggage type for hitchhiker",
          "enum": [
            "small",
            "medium",
            "big"
          ]
        }
      }
    },
    "Driver": {
      "id": "Driver",
      "required": [
        "deviceId",
        "user",
        "active",
        "geoLongitude",
        "geoLatitude"
      ],
      "properties": {
        "user": {
          "$ref": "User"
        },
        "destination": {
          "type": "string"
        },
        "carInfo": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "geoLatitude": {
          "type": "string"
        },
        "geoLongitude": {
          "type": "string"
        },
        "children": {
          "type": "boolean"
        },
        "numberOfPassengers": {
          "type": "integer",
          "format": "int64"
        },
        "ageType": {
          "type": "string",
          "description": "age type preferred by driver",
          "enum": [
            "young",
            "middle",
            "senior"
          ]
        },
        "sexType": {
          "type": "string",
          "description": "sex type preferred by driver",
          "enum": [
            "male_only",
            "female_only",
            "mixed"
          ]
        },
        "baggageType": {
          "type": "string",
          "description": "baggage type preferred by driver",
          "enum": [
            "small",
            "medium",
            "big"
          ]
        }
      }
    }
  }
}